// Generated by CoffeeScript 1.3.3
(function() {
  var Image, ImageContainer, Remindagram, View, init,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  View = (function() {

    View.prototype.moveable = ['X', 'Y'];

    function View() {
      var _this = this;
      if (__indexOf.call(this.moveable, 'X') >= 0 || __indexOf.call(this.moveable, 'Y') >= 0) {
        this.element[0].addEventListener('touchstart', (function(event) {
          return _this.touchStart(event);
        }), false);
        this.element[0].addEventListener('touchend', (function(event) {
          return _this.touchEnd(event);
        }), false);
        this.element[0].addEventListener('touchmove', (function(event) {
          return _this.touchMove(event);
        }), false);
        this.touchStartPoint = {
          'x': 0,
          'y': 0
        };
      }
    }

    View.prototype.append = function(child) {
      return this.element.append(child);
    };

    View.prototype.touchStart = function(event) {
      var touch;
      if (event.targetTouches.length === 1) {
        event.preventDefault();
        touch = event.targetTouches[0];
        this.touchStartPoint = {
          'x': touch.pageX,
          'y': touch.pageY
        };
        this.elementStartPoint = {
          'x': parseInt(this.element.css('left'), 10) || 0,
          'y': parseInt(this.element.css('top'), 10) || 0
        };
        return this.elementPosition = {
          'x': this.elementStartPoint.x,
          'y': this.elementStartPoint.y
        };
      }
    };

    View.prototype.touchEnd = function(event) {
      return this.touchDirection = null;
    };

    View.prototype.touchMove = function(event) {
      var delta, touch,
        _this = this;
      if (event.targetTouches.length === 1) {
        event.preventDefault();
        touch = event.targetTouches[0];
        delta = {
          'x': touch.pageX - this.touchStartPoint.x,
          'y': touch.pageY - this.touchStartPoint.y
        };
        if (!this.touchDirection) {
          if (Math.abs(delta.x) > Math.abs(delta.y)) {
            this.touchDirection = 'X';
          } else {
            this.touchDirection = 'Y';
          }
        }
        if (__indexOf.call(this.moveable, 'X') >= 0 && this.touchDirection === 'X') {
          this.elementPosition.x = delta.x + this.elementStartPoint.x;
        }
        if (__indexOf.call(this.moveable, 'Y') >= 0 && this.touchDirection === 'Y') {
          this.elementPosition.y = delta.y + this.elementStartPoint.y;
        }
        if (!this.timer) {
          return this.timer = setTimeout((function() {
            return _this.updatePosition();
          }), 1);
        }
      }
    };

    View.prototype.updatePosition = function() {
      this.timer = clearTimeout(this.timer);
      this.element.css('left', this.elementPosition.x);
      return this.element.css('top', this.elementPosition.y);
    };

    return View;

  })();

  Image = (function(_super) {

    __extends(Image, _super);

    Image.prototype.moveable = ['X'];

    Image.prototype.template = function() {
      return "<div class=\"image-container\">\n	<img class=\"image\" id=\"image-" + this.id + "\" src=\"" + (this.src || '') + "\" />\n</div>";
    };

    function Image(id, src) {
      this.id = id;
      this.src = src;
      this.element = $(this.template());
      Image.__super__.constructor.apply(this, arguments);
    }

    Image.prototype.render = function() {
      return this.element;
    };

    return Image;

  })(View);

  ImageContainer = (function(_super) {

    __extends(ImageContainer, _super);

    ImageContainer.prototype.moveable = ['Y'];

    ImageContainer.prototype.template = function() {
      return "<section id=\"" + this.id + "\" class=\"images\">\n</section>";
    };

    function ImageContainer(id, slots) {
      var num;
      this.id = id;
      this.slots = slots;
      this.element = $(this.template());
      this.images = (function() {
        var _i, _ref, _results;
        _results = [];
        for (num = _i = 1, _ref = this.slots; 1 <= _ref ? _i <= _ref : _i >= _ref; num = 1 <= _ref ? ++_i : --_i) {
          _results.push(new Image(num));
        }
        return _results;
      }).call(this);
      ImageContainer.__super__.constructor.apply(this, arguments);
    }

    ImageContainer.prototype.render = function() {
      var image, _i, _len, _ref;
      _ref = this.images;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        image = _ref[_i];
        this.append(image.render());
      }
      return this.element;
    };

    return ImageContainer;

  })(View);

  Remindagram = (function() {

    function Remindagram(slots) {
      var numSlots;
      numSlots = 6;
      this.imageContainer = new ImageContainer('images', numSlots);
      $('#body').append(this.imageContainer.render());
      $('#body')[0].addEventListener('touchmove', (function(event) {
        return event.preventDefault();
      }), false);
    }

    return Remindagram;

  })();

  init = function() {
    var app;
    return app = new Remindagram(6);
  };

  $(document).ready(init);

}).call(this);
